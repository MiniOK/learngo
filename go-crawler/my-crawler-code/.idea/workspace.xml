<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c7ab831e-a806-44d8-8e93-0654946b2a48" name="Default Changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="E:\gohome" />
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1ao17Afov3MLMNZ8fztdTE0Npuc" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../.." />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
  </component>
  <component name="RestClientSettings">
    <option name="REQUEST_HISTORY">
      <list>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="index/type/1" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parameters">
            <list>
              <KeyValuePair>
                <option name="key" value="pretty" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;name&quot;: &quot;golang&quot;,   &quot;instructor&quot;: &quot;cc&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="PUT" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="index/type/1" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parameters">
            <list>
              <KeyValuePair>
                <option name="key" value="pretty" />
                <option name="value" value="" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;name&quot;: &quot;golang&quot;,   &quot;instructor&quot;: &quot;cc&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="index/type/1" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;name&quot;: &quot;golang&quot;,   &quot;instructor&quot;: &quot;cc&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="PUT" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="index/type/1" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{   &quot;name&quot;: &quot;golang&quot;,   &quot;instructor&quot;: &quot;cc&quot; }" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="index/type/1" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="index=golang,type=cc" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="PUT" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="index/type/1" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="index=golang,type=cc" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:9200" />
          <option name="urlPath" value="" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="parametersEnabled" value="true" />
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
      </list>
    </option>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build my-crawler-code/example/tree">
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="my-crawler-code" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build my-crawler-code/example/tree" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="my-crawler-code" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/example/tree/node.go" />
      <package value="my-crawler-code/example/tree" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build node.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="my-crawler-code" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/example/tree/node.go" />
      <package value="my-crawler-code" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseCityList in my-crawler-code/zhenai/parser (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="my-crawler-code" />
      <working_directory value="$PROJECT_DIR$/zhenai/parser" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="my-crawler-code/zhenai/parser" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestParseCityList$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseCityList in my-crawler-code/zhenai/parser" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="my-crawler-code" />
      <working_directory value="$PROJECT_DIR$/zhenai/parser" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="my-crawler-code/zhenai/parser" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestParseCityList$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build my-crawler-code/example/tree" />
        <item itemvalue="Go Build.go build node.go" />
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Test.TestParseCityList in my-crawler-code/zhenai/parser (1)" />
        <item itemvalue="Go Test.TestParseCityList in my-crawler-code/zhenai/parser" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.cn,direct</proxy>
  </component>
</project>